language: cpp
dist: bionic
sudo: required

#
# Build Dependencies
#
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
      sudo apt-get update
      sudo apt-get -y install cmake
    fi
  - |
    echo "Build information"
    ${CXX} --version
    cmake --version

before_script:
  # Clone Crypto++, prepare build with Cmake
  - |
    cd ..
    git clone https://github.com/weidai11/cryptopp.git cryptopp
    cp cryptopp-cmake/*.* cryptopp
    cd cryptopp
    mkdir cmake_build
    cd cmake_build

jobs:
  include:
    # ARM64
    - os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      name: ARM64, g++ 7.4.0, cmake 3.10.2

    - os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      name: ARM64, clang++ 6.0.0, cmake 3.10.2

    # PPC64
    - os: linux
      arch: ppc64le
      compiler: gcc
      dist: bionic
      name: PPC64, g++ 5.4.0, cmake 3.5.1

    - os: linux
      arch: ppc64le
      compiler: clang
      dist: bionic
      name: PPC64, clang++ 3.8.0, cmake 3.10.2

    # s390
    - os: linux
      arch: s390x
      compiler: gcc
      dist: bionic
      name: s390, g++ 5.4.0, cmake 3.5.1

    - os: linux
      arch: s390x
      compiler: clang
      dist: bionic
      name: s390, clang++ 3.8.0, cmake 3.10.2

    # Newest Xcode available
    - os: osx
      osx_image: xcode11.2
      name: OS X 10.14, XCode 11.2
      arch: amd64

    - os: osx
      osx_image: xcode9.4
      name: OS X 10.13, XCode 9.4
      arch: amd64

    # Oldest Xcode available
    - os: osx
      osx_image: xcode6.4
      name: OS X 10.10, XCode 6.4
      arch: amd64

    # Ubuntu Bionic, GCC
    - os: linux
      name: Ubuntu Bionic, g++ 7.4.0, cmake 3.12.4
      compiler: gcc
      dist: bionic

    # Ubuntu Bionic, Clang
    - os: linux
      name: Ubuntu Bionic, clang++ 7.0.0, cmake 3.12.4
      compiler: clang
      dist: bionic

    # Ubuntu Xenial, GCC
    - os: linux
      name: Ubuntu Xenial, g++ 5.4.0, cmake 3.9.2
      compiler: gcc
      dist: xenial

    # Ubuntu Xenial, Clang
    - os: linux
      name: Ubuntu Xenial, clang++ 7.0.0, cmake 3.9.2
      compiler: clang
      dist: xenial

    # Ubuntu Trusty, GCC
    - os: linux
      name: Ubuntu Trusty, g++ 4.8.4, cmake 2.8.12
      compiler: gcc
      dist: trusty

    # Ubuntu Trusty, Clang
    - os: linux
      name: Ubuntu Trusty, clang++ 5.0, cmake 2.8.12
      compiler: clang
      dist: trusty

  allow_failures:
    # Clang 7.0 and below will likely have trouble due to
    # https://bugs.llvm.org/show_bug.cgi?id=39704
    - os: linux
      arch: ppc64le
      compiler: clang
    # Clang has a fair amount of trouble
    # on platforms Apple does not support
    - os: linux
      arch: s390x
      compiler: clang

script:
  # CMake is being run from .../cryptopp/cmake_build/ directory
  - cmake  -DCMAKE_C_COMPILER="$CC" -DCMAKE_CXX_COMPILER="$CXX" ..
  - make -k -j 2 VERBOSE=1
  - ctest --output-on-failure
  - ./cryptest.exe v

addons:
  - sonarcloud: false

# Whitelist branches to avoid testing feature branches twice
branches:
  only:
    - master
    - /\/ci$/

notifications:
  email:
    recipients:
      - cryptopp-build@googlegroups.com
    on_success: always # default: change
    on_failure: always # default: always
